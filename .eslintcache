[{"/Users/tatianagrigorieva/Projects/instagram-tsg/src/index.js":"1","/Users/tatianagrigorieva/Projects/instagram-tsg/src/theme.js":"2","/Users/tatianagrigorieva/Projects/instagram-tsg/src/auth.js":"3","/Users/tatianagrigorieva/Projects/instagram-tsg/src/App.js":"4","/Users/tatianagrigorieva/Projects/instagram-tsg/src/graphql/client.js":"5","/Users/tatianagrigorieva/Projects/instagram-tsg/src/graphql/mutations.js":"6","/Users/tatianagrigorieva/Projects/instagram-tsg/src/pages/feed.js":"7","/Users/tatianagrigorieva/Projects/instagram-tsg/src/pages/explore.js":"8","/Users/tatianagrigorieva/Projects/instagram-tsg/src/pages/post.js":"9","/Users/tatianagrigorieva/Projects/instagram-tsg/src/pages/edit-profile.js":"10","/Users/tatianagrigorieva/Projects/instagram-tsg/src/pages/profile.js":"11","/Users/tatianagrigorieva/Projects/instagram-tsg/src/pages/not-found.js":"12","/Users/tatianagrigorieva/Projects/instagram-tsg/src/pages/signup.js":"13","/Users/tatianagrigorieva/Projects/instagram-tsg/src/pages/login.js":"14","/Users/tatianagrigorieva/Projects/instagram-tsg/src/components/post/PostModal.js":"15","/Users/tatianagrigorieva/Projects/instagram-tsg/src/graphql/queries.js":"16","/Users/tatianagrigorieva/Projects/instagram-tsg/src/styles.js":"17","/Users/tatianagrigorieva/Projects/instagram-tsg/src/components/post/Post.js":"18","/Users/tatianagrigorieva/Projects/instagram-tsg/src/icons.js":"19","/Users/tatianagrigorieva/Projects/instagram-tsg/src/components/shared/Seo.js":"20","/Users/tatianagrigorieva/Projects/instagram-tsg/src/components/post/PostSkeleton.js":"21","/Users/tatianagrigorieva/Projects/instagram-tsg/src/data.js":"22","/Users/tatianagrigorieva/Projects/instagram-tsg/src/components/shared/OptionsDialog.js":"23","/Users/tatianagrigorieva/Projects/instagram-tsg/src/components/shared/UserCard.js":"24","/Users/tatianagrigorieva/Projects/instagram-tsg/src/components/shared/Layout.js":"25","/Users/tatianagrigorieva/Projects/instagram-tsg/src/components/shared/ProfilePicture.js":"26","/Users/tatianagrigorieva/Projects/instagram-tsg/src/components/post/MorePostsFromUser.js":"27","/Users/tatianagrigorieva/Projects/instagram-tsg/src/components/profile/ProfileTabs.js":"28","/Users/tatianagrigorieva/Projects/instagram-tsg/src/components/shared/LoadingScreen.js":"29","/Users/tatianagrigorieva/Projects/instagram-tsg/src/components/explore/ExploreGrid.js":"30","/Users/tatianagrigorieva/Projects/instagram-tsg/src/components/explore/ExploreSuggestions.js":"31","/Users/tatianagrigorieva/Projects/instagram-tsg/src/components/feed/FeedPost.js":"32","/Users/tatianagrigorieva/Projects/instagram-tsg/src/components/feed/FeedPostSkeleton.js":"33","/Users/tatianagrigorieva/Projects/instagram-tsg/src/components/feed/FeedSideSuggestions.js":"34","/Users/tatianagrigorieva/Projects/instagram-tsg/src/components/shared/Navbar.js":"35","/Users/tatianagrigorieva/Projects/instagram-tsg/src/components/shared/GridPost.js":"36","/Users/tatianagrigorieva/Projects/instagram-tsg/src/components/shared/FollowButton.js":"37","/Users/tatianagrigorieva/Projects/instagram-tsg/src/components/shared/FollowSuggestions.js":"38","/Users/tatianagrigorieva/Projects/instagram-tsg/src/components/notification/NotificationList.js":"39","/Users/tatianagrigorieva/Projects/instagram-tsg/src/components/notification/NotificationTooltip.js":"40","/Users/tatianagrigorieva/Projects/instagram-tsg/src/dev/dev.js":"41","/Users/tatianagrigorieva/Projects/instagram-tsg/src/graphql/subscriptions.js":"42","/Users/tatianagrigorieva/Projects/instagram-tsg/src/utils/handleImageUpload.js":"43","/Users/tatianagrigorieva/Projects/instagram-tsg/src/components/post/AddPostDialog.js":"44","/Users/tatianagrigorieva/Projects/instagram-tsg/src/utils/serialize.js":"45","/Users/tatianagrigorieva/Projects/instagram-tsg/src/utils/formatDate.js":"46","/Users/tatianagrigorieva/Projects/instagram-tsg/src/utils/usePageBottom.js":"47"},{"size":662,"mtime":1609974014000,"results":"48","hashOfConfig":"49"},{"size":2222,"mtime":1584838270000,"results":"50","hashOfConfig":"49"},{"size":3867,"mtime":1610333846000,"results":"51","hashOfConfig":"49"},{"size":2796,"mtime":1610925363000,"results":"52","hashOfConfig":"49"},{"size":489,"mtime":1609967329000,"results":"53","hashOfConfig":"49"},{"size":5149,"mtime":1610990807000,"results":"54","hashOfConfig":"49"},{"size":2570,"mtime":1610934322000,"results":"55","hashOfConfig":"49"},{"size":364,"mtime":1610918417000,"results":"56","hashOfConfig":"49"},{"size":441,"mtime":1610477530000,"results":"57","hashOfConfig":"49"},{"size":9721,"mtime":1610908727000,"results":"58","hashOfConfig":"49"},{"size":10281,"mtime":1610911871000,"results":"59","hashOfConfig":"49"},{"size":692,"mtime":1608843438000,"results":"60","hashOfConfig":"49"},{"size":6955,"mtime":1610306333000,"results":"61","hashOfConfig":"49"},{"size":5869,"mtime":1610912192000,"results":"62","hashOfConfig":"49"},{"size":1191,"mtime":1610900071000,"results":"63","hashOfConfig":"49"},{"size":4313,"mtime":1610925426000,"results":"64","hashOfConfig":"49"},{"size":57656,"mtime":1610398694000,"results":"65","hashOfConfig":"49"},{"size":8813,"mtime":1610935233000,"results":"66","hashOfConfig":"49"},{"size":17054,"mtime":1584838270000,"results":"67","hashOfConfig":"49"},{"size":252,"mtime":1608568768000,"results":"68","hashOfConfig":"49"},{"size":838,"mtime":1609940110000,"results":"69","hashOfConfig":"49"},{"size":1823,"mtime":1609963789000,"results":"70","hashOfConfig":"49"},{"size":2262,"mtime":1610925026000,"results":"71","hashOfConfig":"49"},{"size":1063,"mtime":1610555321000,"results":"72","hashOfConfig":"49"},{"size":631,"mtime":1608843461000,"results":"73","hashOfConfig":"49"},{"size":1655,"mtime":1610899836000,"results":"74","hashOfConfig":"49"},{"size":1981,"mtime":1610919170000,"results":"75","hashOfConfig":"49"},{"size":3809,"mtime":1610900597000,"results":"76","hashOfConfig":"49"},{"size":362,"mtime":1608842406000,"results":"77","hashOfConfig":"49"},{"size":1246,"mtime":1610918748000,"results":"78","hashOfConfig":"49"},{"size":677,"mtime":1609881565000,"results":"79","hashOfConfig":"49"},{"size":9452,"mtime":1610990931000,"results":"80","hashOfConfig":"49"},{"size":612,"mtime":1609939939000,"results":"81","hashOfConfig":"49"},{"size":1492,"mtime":1610931191000,"results":"82","hashOfConfig":"49"},{"size":7789,"mtime":1610549927000,"results":"83","hashOfConfig":"49"},{"size":1114,"mtime":1610898222000,"results":"84","hashOfConfig":"49"},{"size":1521,"mtime":1610917369000,"results":"85","hashOfConfig":"49"},{"size":2650,"mtime":1610916757000,"results":"86","hashOfConfig":"49"},{"size":2865,"mtime":1610549745000,"results":"87","hashOfConfig":"49"},{"size":979,"mtime":1610548897000,"results":"88","hashOfConfig":"49"},{"size":226,"mtime":1610316587000,"results":"89","hashOfConfig":"49"},{"size":1313,"mtime":1610902433000,"results":"90","hashOfConfig":"49"},{"size":515,"mtime":1610908692000,"results":"91","hashOfConfig":"49"},{"size":3104,"mtime":1610478673000,"results":"92","hashOfConfig":"49"},{"size":381,"mtime":1610399204000,"results":"93","hashOfConfig":"49"},{"size":755,"mtime":1610550732000,"results":"94","hashOfConfig":"49"},{"size":534,"mtime":1610934005000,"results":"95","hashOfConfig":"49"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},"16qgjxl",{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"98"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"98"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"98"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/tatianagrigorieva/Projects/instagram-tsg/src/index.js",[],["194","195"],"/Users/tatianagrigorieva/Projects/instagram-tsg/src/theme.js",[],"/Users/tatianagrigorieva/Projects/instagram-tsg/src/auth.js",["196"],"import React from 'react';\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/database';\nimport defaultUserImage from './images/default-user-image.jpg';\nimport { useMutation } from '@apollo/react-hooks';\nimport { CREATE_USER } from './graphql/mutations';\nimport { API_KEY, CLIENT_ID, CLIENT_SECRET } from './dev/dev';\n\nconst provider = new firebase.auth.GoogleAuthProvider();\n\n// Find these options in your Firebase console\nfirebase.initializeApp({\n  apiKey: API_KEY,\n  authDomain: 'instagram.firebaseapp.com',\n  databaseURL: 'https://instagram-21e99-default-rtdb.firebaseio.com',\n  projectId: 'instagram-21e99',\n  storageBucket: 'instagram.appspot.com',\n  messagingSenderId: '746216895507',\n  appId: `1:746216895507:web:${CLIENT_ID}`,\n});\n\nexport const AuthContext = React.createContext();\n\nfunction AuthProvider({ children }) {\n  const [authState, setAuthState] = React.useState({ status: 'loading' });\n  const [createUser] = useMutation(CREATE_USER);\n\n  React.useEffect(() => {\n    firebase.auth().onAuthStateChanged(async (user) => {\n      if (user) {\n        const token = await user.getIdToken();\n        const idTokenResult = await user.getIdTokenResult();\n        const hasuraClaim =\n          idTokenResult.claims['https://hasura.io/jwt/claims'];\n\n        if (hasuraClaim) {\n          setAuthState({ status: 'in', user, token });\n        } else {\n          // Check if refresh is required.\n          const metadataRef = firebase\n            .database()\n            .ref(`metadata/${user.uid}/refreshTime`);\n\n          metadataRef.on('value', async (data) => {\n            if (!data.exists) return;\n            // Force refresh to pick up the latest custom claims changes.\n            const token = await user.getIdToken(true);\n            setAuthState({ status: 'in', user, token });\n          });\n        }\n      } else {\n        setAuthState({ status: 'out' });\n      }\n    });\n  }, []);\n\n  async function logInWithGoogle() {\n    const data = await firebase.auth().signInWithPopup(provider);\n    if (data.additionalUserInfo.isNewUser) {\n      // console.log({ data });\n      const { uid, displayName, email, photoURL } = data.user;\n      const username = `${displayName.replace(/\\s+/g, '')}${uid.slice(-5)}`;\n      const variables = {\n        userId: uid,\n        name: displayName,\n        username,\n        email,\n        bio: '',\n        website: '',\n        phoneNumber: '',\n        profileImage: photoURL,\n      };\n      await createUser({ variables });\n    }\n  }\n\n  async function signUpWithEmailAndPassword(formData) {\n    const data = await firebase\n      .auth()\n      .createUserWithEmailAndPassword(formData.email, formData.password);\n    if (data.additionalUserInfo.isNewUser) {\n      const variables = {\n        userId: data.user.uid,\n        name: formData.name,\n        username: formData.username,\n        email: data.user.email,\n        bio: '',\n        website: '',\n        phoneNumber: '',\n        profileImage: defaultUserImage,\n      };\n      await createUser({ variables });\n    }\n  }\n\n  async function logInWithEmailAndPassword(email, password) {\n    const data = await firebase\n      .auth()\n      .signInWithEmailAndPassword(email, password);\n    return data;\n  }\n\n  async function signOut() {\n    setAuthState({ status: 'loading' });\n    await firebase.auth().signOut();\n    setAuthState({ status: 'out' });\n  }\n\n  async function updateEmail(email) {\n    await authState.user.updateEmail(email);\n  }\n\n  if (authState.status === 'loading') {\n    return null;\n  } else {\n    return (\n      <AuthContext.Provider\n        value={{\n          authState,\n          logInWithGoogle,\n          signOut,\n          signUpWithEmailAndPassword,\n          logInWithEmailAndPassword,\n          updateEmail,\n        }}\n      >\n        {children}\n      </AuthContext.Provider>\n    );\n  }\n}\n\nexport default AuthProvider;\n","/Users/tatianagrigorieva/Projects/instagram-tsg/src/App.js",[],"/Users/tatianagrigorieva/Projects/instagram-tsg/src/graphql/client.js",[],"/Users/tatianagrigorieva/Projects/instagram-tsg/src/graphql/mutations.js",[],"/Users/tatianagrigorieva/Projects/instagram-tsg/src/pages/feed.js",[],"/Users/tatianagrigorieva/Projects/instagram-tsg/src/pages/explore.js",[],"/Users/tatianagrigorieva/Projects/instagram-tsg/src/pages/post.js",[],"/Users/tatianagrigorieva/Projects/instagram-tsg/src/pages/edit-profile.js",[],"/Users/tatianagrigorieva/Projects/instagram-tsg/src/pages/profile.js",[],"/Users/tatianagrigorieva/Projects/instagram-tsg/src/pages/not-found.js",[],"/Users/tatianagrigorieva/Projects/instagram-tsg/src/pages/signup.js",["197","198"],"import React from 'react';\nimport { useSignUpPageStyles } from '../styles';\nimport SEO from '../components/shared/Seo';\nimport {\n  Card,\n  TextField,\n  Button,\n  Typography,\n  InputAdornment,\n} from '@material-ui/core';\nimport { Link, useHistory } from 'react-router-dom';\nimport { LoginWithFacebook } from './login';\nimport { AuthContext } from '../auth';\nimport { useForm } from 'react-hook-form';\nimport { HighlightOff, CheckCircleOutline } from '@material-ui/icons';\nimport isEmail from 'validator/lib/isEmail';\nimport { useApolloClient } from '@apollo/react-hooks';\nimport { CHECK_IF_USERNAME_TAKEN } from '../graphql/queries';\n\nfunction SignUpPage() {\n  const classes = useSignUpPageStyles();\n  const { register, handleSubmit, formState, errors } = useForm({\n    mode: 'onBlur',\n  });\n  const { signUpWithEmailAndPassword } = React.useContext(AuthContext);\n  const [values, setValues] = React.useState({\n    email: '',\n    name: '',\n    username: '',\n    password: '',\n  });\n  const history = useHistory();\n  const [error, setError] = React.useState('');\n  const client = useApolloClient();\n\n  // async function handleSubmit(event) {\n  //   event.preventDefault();\n  //   await signUpWithEmailAndPassword(values);\n  //   history.push('/');\n  // }\n\n  async function onSubmit(data) {\n    //console.log({ data });\n    try {\n      setError('');\n      await signUpWithEmailAndPassword(data);\n      setTimeout(() => history.push('/'), 0);\n    } catch (error) {\n      console.error('Error signing up', error);\n      //setError(error.message);\n      handleError(error);\n    }\n  }\n\n  function handleError(error) {\n    if (error.message.includes('users_username_key')) {\n      setError('Username already taken');\n    } else if (error.code.includes('auth')) {\n      setError(error.message);\n    }\n  }\n\n  async function validateUsername(username) {\n    const variables = { username };\n    const response = await client.query({\n      query: CHECK_IF_USERNAME_TAKEN,\n      variables,\n    });\n    const isUsernameValid = response.data.users.length === 0;\n    return isUsernameValid;\n  }\n\n  const errorIcon = (\n    <InputAdornment>\n      <HighlightOff style={{ color: 'red', height: 30, width: 30 }} />\n    </InputAdornment>\n  );\n\n  const validIcon = (\n    <InputAdornment>\n      <CheckCircleOutline style={{ color: '#ccc', height: 30, width: 30 }} />\n    </InputAdornment>\n  );\n\n  return (\n    <>\n      <SEO title=\"Sign up\" />\n      <section className={classes.section}>\n        <article>\n          <Card className={classes.card}>\n            <div className={classes.cardHeader} />\n            <Typography className={classes.cardHeaderSubHeader}>\n              Sign up to see photos and videos from your friends.\n            </Typography>\n            <LoginWithFacebook\n              color=\"primary\"\n              iconColor=\"white\"\n              variant=\"contained\"\n            />\n            <div className={classes.orContainer}>\n              <div className={classes.orLine} />\n              <div>\n                <Typography variant=\"body2\" color=\"textSecondaty\">\n                  OR\n                </Typography>\n              </div>\n              <div className={classes.orLine} />\n            </div>\n            <form onSubmit={handleSubmit(onSubmit)}>\n              <TextField\n                name=\"email\"\n                inputRef={register({\n                  required: true,\n                  validate: (input) => isEmail(input),\n                })}\n                InputProps={{\n                  endAdornment: errors.email\n                    ? errorIcon\n                    : formState.touched.email && validIcon,\n                }}\n                fullWidth\n                variant=\"filled\"\n                label=\"Email\"\n                type=\"email\"\n                margin=\"dense\"\n                className={classes.textField}\n              />\n              <TextField\n                name=\"name\"\n                inputRef={register({\n                  required: true,\n                  minLength: 5,\n                  maxLength: 20,\n                })}\n                InputProps={{\n                  endAdornment: errors.name\n                    ? errorIcon\n                    : formState.touched.name && validIcon,\n                }}\n                fullWidth\n                variant=\"filled\"\n                label=\"Full Name\"\n                margin=\"dense\"\n                className={classes.textField}\n              />\n              <TextField\n                name=\"username\"\n                inputRef={register({\n                  required: true,\n                  minLength: 5,\n                  maxLength: 20,\n                  validate: async (input) => await validateUsername(input),\n                  //will accept only lowercase/upppercase letter, numbers, periods and underscores\n                  pattern: /^[a-zA-Z0-9_.]*$/,\n                })}\n                InputProps={{\n                  endAdornment: errors.username\n                    ? errorIcon\n                    : formState.touched.username && validIcon,\n                }}\n                fullWidth\n                variant=\"filled\"\n                label=\"Username\"\n                margin=\"dense\"\n                className={classes.textField}\n                autocomplere=\"username\"\n              />\n              <TextField\n                name=\"password\"\n                inputRef={register({\n                  required: true,\n                  minLength: 5,\n                })}\n                InputProps={{\n                  endAdornment: errors.password\n                    ? errorIcon\n                    : formState.touched.password && validIcon,\n                }}\n                fullWidth\n                variant=\"filled\"\n                label=\"Password\"\n                type=\"password\"\n                margin=\"dense\"\n                className={classes.textField}\n                autoComplete=\"new-password\"\n              />\n              <Button\n                disabled={error || !formState.isValid || formState.isSubmitting}\n                variant=\"contained\"\n                fullWidth\n                color=\"primary\"\n                className={classes.button}\n                type=\"submit\"\n              >\n                Sign Up\n              </Button>\n            </form>\n            <AuthError error={error} />\n          </Card>\n          <Card className={classes.loginCard}>\n            <Typography>Have an account?</Typography>\n            <Link to=\"/accounts/login\">\n              <Button color=\"primary\" className={classes.loginButton}>\n                Log in\n              </Button>\n            </Link>\n          </Card>\n        </article>\n      </section>\n    </>\n  );\n}\n\nexport function AuthError({ error }) {\n  return (\n    Boolean(error) && (\n      <Typography\n        align=\"center\"\n        gutterBottom\n        variant=\"body2\"\n        style={{ color: 'red' }}\n      >\n        {error}\n      </Typography>\n    )\n  );\n}\n\nexport default SignUpPage;\n","/Users/tatianagrigorieva/Projects/instagram-tsg/src/pages/login.js",[],"/Users/tatianagrigorieva/Projects/instagram-tsg/src/components/post/PostModal.js",[],"/Users/tatianagrigorieva/Projects/instagram-tsg/src/graphql/queries.js",[],"/Users/tatianagrigorieva/Projects/instagram-tsg/src/styles.js",[],"/Users/tatianagrigorieva/Projects/instagram-tsg/src/components/post/Post.js",["199"],"/Users/tatianagrigorieva/Projects/instagram-tsg/src/icons.js",[],"/Users/tatianagrigorieva/Projects/instagram-tsg/src/components/shared/Seo.js",[],"/Users/tatianagrigorieva/Projects/instagram-tsg/src/components/post/PostSkeleton.js",[],"/Users/tatianagrigorieva/Projects/instagram-tsg/src/data.js",[],"/Users/tatianagrigorieva/Projects/instagram-tsg/src/components/shared/OptionsDialog.js",[],"/Users/tatianagrigorieva/Projects/instagram-tsg/src/components/shared/UserCard.js",[],"/Users/tatianagrigorieva/Projects/instagram-tsg/src/components/shared/Layout.js",[],"/Users/tatianagrigorieva/Projects/instagram-tsg/src/components/shared/ProfilePicture.js",[],"/Users/tatianagrigorieva/Projects/instagram-tsg/src/components/post/MorePostsFromUser.js",[],"/Users/tatianagrigorieva/Projects/instagram-tsg/src/components/profile/ProfileTabs.js",[],"/Users/tatianagrigorieva/Projects/instagram-tsg/src/components/shared/LoadingScreen.js",[],"/Users/tatianagrigorieva/Projects/instagram-tsg/src/components/explore/ExploreGrid.js",[],"/Users/tatianagrigorieva/Projects/instagram-tsg/src/components/explore/ExploreSuggestions.js",[],"/Users/tatianagrigorieva/Projects/instagram-tsg/src/components/feed/FeedPost.js",["200"],"import React from 'react';\nimport { useFeedPostStyles } from '../../styles';\nimport UserCard from '../shared/UserCard';\nimport {\n  CommentIcon,\n  MoreIcon,\n  ShareIcon,\n  UnlikeIcon,\n  LikeIcon,\n  RemoveIcon,\n  SaveIcon,\n} from '../../icons';\nimport { Link } from 'react-router-dom';\nimport {\n  Button,\n  Hidden,\n  Typography,\n  Divider,\n  TextField,\n} from '@material-ui/core';\nimport HTMLEllipsis from 'react-lines-ellipsis/lib/html';\nimport FollowSuggestions from '../shared/FollowSuggestions';\nimport OptionsDialog from '../shared/OptionsDialog';\nimport { formatDateToNow } from '../../utils/formatDate';\nimport Img from 'react-graceful-image';\nimport {\n  SAVE_POST,\n  UNSAVE_POST,\n  LIKE_POST,\n  UNLIKE_POST,\n  CREATE_COMMENT,\n} from '../../graphql/mutations';\nimport { GET_FEED } from '../../graphql/queries';\nimport { useMutation } from '@apollo/react-hooks';\nimport { UserContext } from '../../App';\n\nfunction FeedPost({ post, index }) {\n  const classes = useFeedPostStyles();\n  const [showCaption, setCaption] = React.useState(false);\n  const [showOptionsDialog, setOptionsDialog] = React.useState(false);\n  const {\n    id,\n    media,\n    likes,\n    likes_aggregate,\n    saved_posts,\n    location,\n    user,\n    caption,\n    comments,\n    comments_aggregate,\n    created_at,\n  } = post;\n  const showFollowSuggestions = index === 1;\n  const likesCount = likes_aggregate.aggregate.count;\n  const commentsCount = comments_aggregate.aggregate.count;\n\n  return (\n    <>\n      <article\n        className={classes.article}\n        style={{ marginBottom: showFollowSuggestions && 30 }}\n      >\n        {/* Feed Post Header */}\n        <div className={classes.postHeader}>\n          <UserCard user={user} location={location} />\n          <MoreIcon\n            className={classes.moreIcon}\n            onClick={() => setOptionsDialog(true)}\n          />\n        </div>\n        {/* Feed Post Image */}\n        <div>\n          <Img src={media} alt=\"Post media\" className={classes.image} />\n        </div>\n        {/* Feed Post Buttons */}\n        <div className={classes.postButtonsWrapper}>\n          <div className={classes.postButtons}>\n            <LikeButton likes={likes} postId={id} authorId={user.id} />\n            <Link to={`/p/${id}`}>\n              <CommentIcon />\n            </Link>\n            <ShareIcon />\n            <SaveButton savedPosts={saved_posts} postId={id} />\n          </div>\n          <Typography className={classes.likes} variant=\"subtitle2\">\n            <span>{likesCount === 1 ? '1 like' : `${likesCount} likes`}</span>\n          </Typography>\n          <div className={showCaption ? classes.expanded : classes.collapsed}>\n            <Link to={`/${user.username}`}>\n              <Typography\n                variant=\"subtitle2\"\n                component=\"span\"\n                className={classes.username}\n              >\n                {user.username}\n              </Typography>\n            </Link>\n            {showCaption ? (\n              <Typography\n                variant=\"body2\"\n                component=\"span\"\n                dangerouslySetInnerHTML={{ __html: caption }}\n              />\n            ) : (\n              <div className={classes.captionWrapper}>\n                <HTMLEllipsis\n                  unsafeHTML={caption}\n                  className={classes.caption}\n                  maxLine=\"0\"\n                  ellipsis=\"...\"\n                  basedOn=\"letters\"\n                />\n                <Button\n                  className={classes.moreButton}\n                  onClick={() => setCaption(true)}\n                >\n                  more\n                </Button>\n              </div>\n            )}\n          </div>\n          <Link to={`/p/${id}`}>\n            <Typography\n              className={classes.commentsLink}\n              variant=\"body2\"\n              component=\"div\"\n            >\n              View all {commentsCount} comments\n            </Typography>\n          </Link>\n          {comments.map((comment) => (\n            <div key={comment.id}>\n              <Link to={`/${comment.user.username}`}>\n                <Typography\n                  variant=\"subtitle2\"\n                  component=\"span\"\n                  className={classes.commentUsername}\n                >\n                  {comment.user.username}\n                </Typography>{' '}\n                <Typography variant=\"body2\" component=\"span\">\n                  {comment.content}\n                </Typography>\n              </Link>\n            </div>\n          ))}\n          <Typography color=\"textSecondary\" className={classes.datePosted}>\n            {formatDateToNow(created_at)}\n          </Typography>\n        </div>\n        <Hidden xsDown>\n          <Divider />\n          <Comment />\n        </Hidden>\n      </article>\n      {showFollowSuggestions && <FollowSuggestions />}\n      {showOptionsDialog && (\n        <OptionsDialog\n          authorId={user.id}\n          postId={id}\n          onClose={() => setOptionsDialog(false)}\n        />\n      )}\n    </>\n  );\n}\n\nfunction LikeButton({ likes, postId, authorId }) {\n  const classes = useFeedPostStyles();\n  const { currentUserId, feedIds } = React.useContext(UserContext);\n  const isAlreadyLiked = likes.some(({ user_id }) => user_id === currentUserId);\n  const [liked, setLiked] = React.useState(isAlreadyLiked);\n  const Icon = liked ? UnlikeIcon : LikeIcon;\n  const className = liked ? classes.liked : classes.like;\n  const onClick = liked ? handleUnlike : handleLike;\n  const [likePost] = useMutation(LIKE_POST);\n  const [unlikePost] = useMutation(UNLIKE_POST);\n  const variables = {\n    postId,\n    userId: currentUserId,\n    profileId: authorId,\n  };\n\n  function handleUpdate(cache, result) {\n    const variables = { limit: 2, feedIds };\n    const data = cache.readQuery({\n      query: GET_FEED,\n      variables,\n    });\n    // console.log({ result, data });\n    const typename = result.data.insert_likes?.__typename;\n    const count = typename === 'likes_mutation_response' ? 1 : -1;\n    const posts = data.posts.map((post) => ({\n      ...post,\n      likes_aggregate: {\n        ...post.likes_aggregate,\n        aggregate: {\n          ...post.likes_aggregate.aggregate,\n          count: post.likes_aggregate.aggregate.count + count,\n        },\n      },\n    }));\n    cache.writeQuery({ query: GET_FEED, data: { posts } });\n  }\n\n  function handleLike() {\n    //console.log('like');\n    setLiked(true);\n    likePost({ variables, update: handleUpdate });\n  }\n\n  function handleUnlike() {\n    //console.log('unlike');\n    setLiked(false);\n    unlikePost({ variables, update: handleUpdate });\n  }\n\n  return <Icon className={className} onClick={onClick} />;\n}\n\nfunction SaveButton({ postId, savedPosts }) {\n  const classes = useFeedPostStyles();\n  const { currentUserId } = React.useContext(UserContext);\n  const isAlreadySaved = savedPosts.some(\n    ({ user_id }) => user_id === currentUserId\n  );\n  const [saved, setSaved] = React.useState(isAlreadySaved);\n  const Icon = saved ? RemoveIcon : SaveIcon;\n  const onClick = saved ? handleRemove : handleSave;\n  const [savePost] = useMutation(SAVE_POST);\n  const [removePost] = useMutation(UNSAVE_POST);\n  const variables = {\n    postId,\n    userId: currentUserId,\n  };\n\n  function handleSave() {\n    // console.log(\"save\");\n    setSaved(true);\n    savePost({ variables });\n  }\n\n  function handleRemove() {\n    setSaved(false);\n    removePost({ variables });\n  }\n\n  return <Icon className={classes.saveIcon} onClick={onClick} />;\n}\n\nfunction Comment() {\n  const classes = useFeedPostStyles();\n  const [content, setContent] = React.useState('');\n\n  return (\n    <div className={classes.commentContainer}>\n      <TextField\n        fullWidth\n        value={content}\n        placeholder=\"Add a comment...\"\n        multiline\n        rowsMax={2}\n        row={1}\n        onChange={(event) => setContent(event.target.value)}\n        InputProps={{\n          classes: {\n            root: classes.root,\n            underline: classes.underline,\n          },\n        }}\n      />\n      <Button\n        color=\"primary\"\n        className={classes.commentButton}\n        disabled={!content.trim()}\n      >\n        Post\n      </Button>\n    </div>\n  );\n}\n\nexport default FeedPost;\n","/Users/tatianagrigorieva/Projects/instagram-tsg/src/components/feed/FeedPostSkeleton.js",[],"/Users/tatianagrigorieva/Projects/instagram-tsg/src/components/feed/FeedSideSuggestions.js",[],"/Users/tatianagrigorieva/Projects/instagram-tsg/src/components/shared/Navbar.js",[],"/Users/tatianagrigorieva/Projects/instagram-tsg/src/components/shared/GridPost.js",[],"/Users/tatianagrigorieva/Projects/instagram-tsg/src/components/shared/FollowButton.js",[],"/Users/tatianagrigorieva/Projects/instagram-tsg/src/components/shared/FollowSuggestions.js",[],"/Users/tatianagrigorieva/Projects/instagram-tsg/src/components/notification/NotificationList.js",[],"/Users/tatianagrigorieva/Projects/instagram-tsg/src/components/notification/NotificationTooltip.js",[],"/Users/tatianagrigorieva/Projects/instagram-tsg/src/dev/dev.js",[],"/Users/tatianagrigorieva/Projects/instagram-tsg/src/graphql/subscriptions.js",[],"/Users/tatianagrigorieva/Projects/instagram-tsg/src/utils/handleImageUpload.js",[],"/Users/tatianagrigorieva/Projects/instagram-tsg/src/components/post/AddPostDialog.js",[],"/Users/tatianagrigorieva/Projects/instagram-tsg/src/utils/serialize.js",[],"/Users/tatianagrigorieva/Projects/instagram-tsg/src/utils/formatDate.js",[],"/Users/tatianagrigorieva/Projects/instagram-tsg/src/utils/usePageBottom.js",[],{"ruleId":"201","replacedBy":"202"},{"ruleId":"203","replacedBy":"204"},{"ruleId":"205","severity":1,"message":"206","line":8,"column":30,"nodeType":"207","messageId":"208","endLine":8,"endColumn":43},{"ruleId":"205","severity":1,"message":"209","line":26,"column":10,"nodeType":"207","messageId":"208","endLine":26,"endColumn":16},{"ruleId":"205","severity":1,"message":"210","line":26,"column":18,"nodeType":"207","messageId":"208","endLine":26,"endColumn":27},{"ruleId":"205","severity":1,"message":"211","line":57,"column":5,"nodeType":"207","messageId":"208","endLine":57,"endColumn":12},{"ruleId":"205","severity":1,"message":"212","line":31,"column":3,"nodeType":"207","messageId":"208","endLine":31,"endColumn":17},"no-native-reassign",["213"],"no-negated-in-lhs",["214"],"no-unused-vars","'CLIENT_SECRET' is defined but never used.","Identifier","unusedVar","'values' is assigned a value but never used.","'setValues' is assigned a value but never used.","'user_id' is assigned a value but never used.","'CREATE_COMMENT' is defined but never used.","no-global-assign","no-unsafe-negation"]